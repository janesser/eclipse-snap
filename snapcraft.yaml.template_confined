ename: !- $env[ECLIPSE_PACKAGE]
eprefix: !- $env[SNAP_PREFIX]
name: !? $_.eprefix + $_.ename
base: core24

epackages: !- $import('eclipse-packages.yaml')
version: !? .epackages.latest

summary: Extensible Tool Platform and Java IDE
description:
  Eclipse provides IDEs and platforms for nearly every language and architecture.
  We are famous for our Java IDE, C/C++, JavaScript and PHP IDEs built on extensible
  platforms for creating desktop, Web and cloud IDEs. These platforms deliver the most
  extensive collection of add-on tools available for software developers.

grade: stable
confinement: strict

compression: lzo

platforms:
  amd64:
    build-on: [amd64]
    build-for: [amd64]
  arm64:
    build-on: [arm64]
    build-for: [arm64]

apps:
  !? $_.name:
    command: bin/eclipse-wrapper
    extensions: [gnome]
    desktop: eclipse.desktop
    environment:
      ## https://docs.gtk.org/glib/running.html#environment-variables
      G_MESSAGES_DEBUG: all
      ## https://docs.mesa3d.org/envvars.html
      LIBGL_DEBUG: 1
      DRI_PRIME_DEBUG: 1
      MESA_DEBUG: 1
      MESA_VK_DEVICE_SELECT_DEBUG: 1
      # AMD_DEBUG: all
      ## https://trac.webkit.org/wiki/EnvironmentVariables
      WEBKIT_DEBUG: all
    plugs:
      - personal-gitconfig
      - personal-maven-cache
      - home # suppose checked out sources here
      - network
      - network-bind
      - hugepages-control
      - ssh-keys

plugs:
  personal-gitconfig:
    interface: personal-files
    write:
    - $HOME/.gitconfig
  personal-maven-cache:
    interface: personal-files
    write:
    - $HOME/.m2

parts:
  eclipse:
    plugin: dump
    source-type: tar
    source: 
      # TODO use for loop here
      # TODO use source-checksum once supported in multiarch setting
      - on amd64: !? .epackages[$_.version][$_.ename].amd64.source
      - on arm64: !? .epackages[$_.version][$_.ename].arm64.source
    build-attributes:
      - no-patchelf
    permissions:
    - mode: '555'
    after:
    - eclipse_deps
    organize:
      'configuration': 'usr/lib/eclipse/configuration'
      'dropins': 'usr/lib/eclipse/dropins'
      'features': 'usr/lib/eclipse/features'
      'p2': 'usr/lib/eclipse/p2'
      'plugins': 'usr/lib/eclipse/plugins'
      'readme': 'usr/lib/eclipse/readme'
      '.eclipseproduct': 'usr/lib/eclipse/.eclipseproduct'
      'artifacts.xml': 'usr/lib/eclipse/artifacts.xml'
      'eclipse': 'usr/lib/eclipse/eclipse'
      'eclipse.ini': 'usr/lib/eclipse/eclipse.ini'
      'icon.xpm': 'usr/lib/eclipse/icon.xpm'
    override-prime: |
      craftctl default
      rm -r $SNAPCRAFT_PRIME/usr/lib/eclipse/plugins/com.sun.jna_*v*/com/sun/jna/aix*/
      rm -r $SNAPCRAFT_PRIME/usr/lib/eclipse/plugins/com.sun.jna_*v*/com/sun/jna/darwin*/
      rm -r $SNAPCRAFT_PRIME/usr/lib/eclipse/plugins/com.sun.jna_*v*/com/sun/jna/freebsd*/
      rm -r $SNAPCRAFT_PRIME/usr/lib/eclipse/plugins/com.sun.jna_*v*/com/sun/jna/openbsd*/
      rm -r $SNAPCRAFT_PRIME/usr/lib/eclipse/plugins/com.sun.jna_*v*/com/sun/jna/sunos*/
      rm -r $SNAPCRAFT_PRIME/usr/lib/eclipse/plugins/com.sun.jna_*v*/com/sun/jna/win32*/
  wrappers:
    plugin: dump
    source: snap/local/wrappers
    organize:
      eclipse_confined: bin/eclipse-wrapper
  eclipse_desktop:
    plugin: dump
    source: snap/gui
  eclipse_deps:
    plugin: nil
    stage-snaps:
    - git-confined

layout:
  /usr/local/bin:
    bind: $SNAP/usr/bin
  /usr/libexec/git-core:
    symlink: $SNAP/usr/libexec/git-core
  /usr/share/git-core:
    symlink: $SNAP/usr/share/git-core
  /usr/lib/eclipse:
    bind: $SNAP/usr/lib/eclipse

lint:
  ignore:
  - library:
    - usr/lib/**/*.so*